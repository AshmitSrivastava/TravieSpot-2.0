{
  "version": 3,
  "sources": ["../../save-svg-as-png/lib/saveSvgAsPng.js", "../../file-saver/src/FileSaver.js", "../../html-to-image/src/util.ts", "../../html-to-image/src/clone-pseudos.ts", "../../html-to-image/src/mimes.ts", "../../html-to-image/src/dataurl.ts", "../../html-to-image/src/clone-node.ts", "../../html-to-image/src/embed-resources.ts", "../../html-to-image/src/embed-images.ts", "../../html-to-image/src/apply-style.ts", "../../html-to-image/src/embed-webfonts.ts", "../../html-to-image/src/index.ts", "../../save-html-as-image/src/utils.js", "../../save-html-as-image/src/utils-image-options.js", "../../save-html-as-image/src/index.js"],
  "sourcesContent": ["'use strict';\r\n\r\n(function () {\r\n  var out$ = typeof exports != 'undefined' && exports || typeof define != 'undefined' && {} || this || window;\r\n  if (typeof define !== 'undefined') define('save-svg-as-png', [], function () {\r\n    return out$;\r\n  });\r\n  out$.default = out$;\r\n\r\n  var xmlNs = 'http://www.w3.org/2000/xmlns/';\r\n  var xhtmlNs = 'http://www.w3.org/1999/xhtml';\r\n  var svgNs = 'http://www.w3.org/2000/svg';\r\n  var doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n  var urlRegex = /url\\([\"']?(.+?)[\"']?\\)/;\r\n  var fontFormats = {\r\n    woff2: 'font/woff2',\r\n    woff: 'font/woff',\r\n    otf: 'application/x-font-opentype',\r\n    ttf: 'application/x-font-ttf',\r\n    eot: 'application/vnd.ms-fontobject',\r\n    sfnt: 'application/font-sfnt',\r\n    svg: 'image/svg+xml'\r\n  };\r\n\r\n  var isElement = function isElement(obj) {\r\n    return obj instanceof HTMLElement || obj instanceof SVGElement;\r\n  };\r\n  var requireDomNode = function requireDomNode(el) {\r\n    if (!isElement(el)) throw new Error('an HTMLElement or SVGElement is required; got ' + el);\r\n  };\r\n  var requireDomNodePromise = function requireDomNodePromise(el) {\r\n    return new Promise(function (resolve, reject) {\r\n      if (isElement(el)) resolve(el);else reject(new Error('an HTMLElement or SVGElement is required; got ' + el));\r\n    });\r\n  };\r\n  var isExternal = function isExternal(url) {\r\n    return url && url.lastIndexOf('http', 0) === 0 && url.lastIndexOf(window.location.host) === -1;\r\n  };\r\n\r\n  var getFontMimeTypeFromUrl = function getFontMimeTypeFromUrl(fontUrl) {\r\n    var formats = Object.keys(fontFormats).filter(function (extension) {\r\n      return fontUrl.indexOf('.' + extension) > 0;\r\n    }).map(function (extension) {\r\n      return fontFormats[extension];\r\n    });\r\n    if (formats) return formats[0];\r\n    console.error('Unknown font format for ' + fontUrl + '. Fonts may not be working correctly.');\r\n    return 'application/octet-stream';\r\n  };\r\n\r\n  var arrayBufferToBase64 = function arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = new Uint8Array(buffer);\r\n    for (var i = 0; i < bytes.byteLength; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }return window.btoa(binary);\r\n  };\r\n\r\n  var getDimension = function getDimension(el, clone, dim) {\r\n    var v = el.viewBox && el.viewBox.baseVal && el.viewBox.baseVal[dim] || clone.getAttribute(dim) !== null && !clone.getAttribute(dim).match(/%$/) && parseInt(clone.getAttribute(dim)) || el.getBoundingClientRect()[dim] || parseInt(clone.style[dim]) || parseInt(window.getComputedStyle(el).getPropertyValue(dim));\r\n    return typeof v === 'undefined' || v === null || isNaN(parseFloat(v)) ? 0 : v;\r\n  };\r\n\r\n  var getDimensions = function getDimensions(el, clone, width, height) {\r\n    if (el.tagName === 'svg') return {\r\n      width: width || getDimension(el, clone, 'width'),\r\n      height: height || getDimension(el, clone, 'height')\r\n    };else if (el.getBBox) {\r\n      var _el$getBBox = el.getBBox(),\r\n          x = _el$getBBox.x,\r\n          y = _el$getBBox.y,\r\n          _width = _el$getBBox.width,\r\n          _height = _el$getBBox.height;\r\n\r\n      return {\r\n        width: x + _width,\r\n        height: y + _height\r\n      };\r\n    }\r\n  };\r\n\r\n  var reEncode = function reEncode(data) {\r\n    return decodeURIComponent(encodeURIComponent(data).replace(/%([0-9A-F]{2})/g, function (match, p1) {\r\n      var c = String.fromCharCode('0x' + p1);\r\n      return c === '%' ? '%25' : c;\r\n    }));\r\n  };\r\n\r\n  var uriToBlob = function uriToBlob(uri) {\r\n    var byteString = window.atob(uri.split(',')[1]);\r\n    var mimeString = uri.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var intArray = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n      intArray[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], { type: mimeString });\r\n  };\r\n\r\n  var query = function query(el, selector) {\r\n    if (!selector) return;\r\n    try {\r\n      return el.querySelector(selector) || el.parentNode && el.parentNode.querySelector(selector);\r\n    } catch (err) {\r\n      console.warn('Invalid CSS selector \"' + selector + '\"', err);\r\n    }\r\n  };\r\n\r\n  var detectCssFont = function detectCssFont(rule, href) {\r\n    // Match CSS font-face rules to external links.\r\n    // @font-face {\r\n    //   src: local('Abel'), url(https://fonts.gstatic.com/s/abel/v6/UzN-iejR1VoXU2Oc-7LsbvesZW2xOQ-xsNqO47m55DA.woff2);\r\n    // }\r\n    var match = rule.cssText.match(urlRegex);\r\n    var url = match && match[1] || '';\r\n    if (!url || url.match(/^data:/) || url === 'about:blank') return;\r\n    var fullUrl = url.startsWith('../') ? href + '/../' + url : url.startsWith('./') ? href + '/.' + url : url;\r\n    return {\r\n      text: rule.cssText,\r\n      format: getFontMimeTypeFromUrl(fullUrl),\r\n      url: fullUrl\r\n    };\r\n  };\r\n\r\n  var inlineImages = function inlineImages(el) {\r\n    return Promise.all(Array.from(el.querySelectorAll('image')).map(function (image) {\r\n      var href = image.getAttributeNS('http://www.w3.org/1999/xlink', 'href') || image.getAttribute('href');\r\n      if (!href) return Promise.resolve(null);\r\n      if (isExternal(href)) {\r\n        href += (href.indexOf('?') === -1 ? '?' : '&') + 't=' + new Date().valueOf();\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        var canvas = document.createElement('canvas');\r\n        var img = new Image();\r\n        img.crossOrigin = 'anonymous';\r\n        img.src = href;\r\n        img.onerror = function () {\r\n          return reject(new Error('Could not load ' + href));\r\n        };\r\n        img.onload = function () {\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n          canvas.getContext('2d').drawImage(img, 0, 0);\r\n          image.setAttributeNS('http://www.w3.org/1999/xlink', 'href', canvas.toDataURL('image/png'));\r\n          resolve(true);\r\n        };\r\n      });\r\n    }));\r\n  };\r\n\r\n  var cachedFonts = {};\r\n  var inlineFonts = function inlineFonts(fonts) {\r\n    return Promise.all(fonts.map(function (font) {\r\n      return new Promise(function (resolve, reject) {\r\n        if (cachedFonts[font.url]) return resolve(cachedFonts[font.url]);\r\n\r\n        var req = new XMLHttpRequest();\r\n        req.addEventListener('load', function () {\r\n          // TODO: it may also be worth it to wait until fonts are fully loaded before\r\n          // attempting to rasterize them. (e.g. use https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet)\r\n          var fontInBase64 = arrayBufferToBase64(req.response);\r\n          var fontUri = font.text.replace(urlRegex, 'url(\"data:' + font.format + ';base64,' + fontInBase64 + '\")') + '\\n';\r\n          cachedFonts[font.url] = fontUri;\r\n          resolve(fontUri);\r\n        });\r\n        req.addEventListener('error', function (e) {\r\n          console.warn('Failed to load font from: ' + font.url, e);\r\n          cachedFonts[font.url] = null;\r\n          resolve(null);\r\n        });\r\n        req.addEventListener('abort', function (e) {\r\n          console.warn('Aborted loading font from: ' + font.url, e);\r\n          resolve(null);\r\n        });\r\n        req.open('GET', font.url);\r\n        req.responseType = 'arraybuffer';\r\n        req.send();\r\n      });\r\n    })).then(function (fontCss) {\r\n      return fontCss.filter(function (x) {\r\n        return x;\r\n      }).join('');\r\n    });\r\n  };\r\n\r\n  var cachedRules = null;\r\n  var styleSheetRules = function styleSheetRules() {\r\n    if (cachedRules) return cachedRules;\r\n    return cachedRules = Array.from(document.styleSheets).map(function (sheet) {\r\n      try {\r\n        return { rules: sheet.cssRules, href: sheet.href };\r\n      } catch (e) {\r\n        console.warn('Stylesheet could not be loaded: ' + sheet.href, e);\r\n        return {};\r\n      }\r\n    });\r\n  };\r\n\r\n  var inlineCss = function inlineCss(el, options) {\r\n    var _ref = options || {},\r\n        selectorRemap = _ref.selectorRemap,\r\n        modifyStyle = _ref.modifyStyle,\r\n        modifyCss = _ref.modifyCss,\r\n        fonts = _ref.fonts,\r\n        excludeUnusedCss = _ref.excludeUnusedCss;\r\n\r\n    var generateCss = modifyCss || function (selector, properties) {\r\n      var sel = selectorRemap ? selectorRemap(selector) : selector;\r\n      var props = modifyStyle ? modifyStyle(properties) : properties;\r\n      return sel + '{' + props + '}\\n';\r\n    };\r\n    var css = [];\r\n    var detectFonts = typeof fonts === 'undefined';\r\n    var fontList = fonts || [];\r\n    styleSheetRules().forEach(function (_ref2) {\r\n      var rules = _ref2.rules,\r\n          href = _ref2.href;\r\n\r\n      if (!rules) return;\r\n      Array.from(rules).forEach(function (rule) {\r\n        if (typeof rule.style != 'undefined') {\r\n          if (query(el, rule.selectorText)) css.push(generateCss(rule.selectorText, rule.style.cssText));else if (detectFonts && rule.cssText.match(/^@font-face/)) {\r\n            var font = detectCssFont(rule, href);\r\n            if (font) fontList.push(font);\r\n          } else if (!excludeUnusedCss) {\r\n            css.push(rule.cssText);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    return inlineFonts(fontList).then(function (fontCss) {\r\n      return css.join('\\n') + fontCss;\r\n    });\r\n  };\r\n\r\n  var downloadOptions = function downloadOptions() {\r\n    if (!navigator.msSaveOrOpenBlob && !('download' in document.createElement('a'))) {\r\n      return { popup: window.open() };\r\n    }\r\n  };\r\n\r\n  out$.prepareSvg = function (el, options, done) {\r\n    requireDomNode(el);\r\n\r\n    var _ref3 = options || {},\r\n        _ref3$left = _ref3.left,\r\n        left = _ref3$left === undefined ? 0 : _ref3$left,\r\n        _ref3$top = _ref3.top,\r\n        top = _ref3$top === undefined ? 0 : _ref3$top,\r\n        w = _ref3.width,\r\n        h = _ref3.height,\r\n        _ref3$scale = _ref3.scale,\r\n        scale = _ref3$scale === undefined ? 1 : _ref3$scale,\r\n        _ref3$responsive = _ref3.responsive,\r\n        responsive = _ref3$responsive === undefined ? false : _ref3$responsive,\r\n        _ref3$excludeCss = _ref3.excludeCss,\r\n        excludeCss = _ref3$excludeCss === undefined ? false : _ref3$excludeCss;\r\n\r\n    return inlineImages(el).then(function () {\r\n      var clone = el.cloneNode(true);\r\n      clone.style.backgroundColor = (options || {}).backgroundColor || el.style.backgroundColor;\r\n\r\n      var _getDimensions = getDimensions(el, clone, w, h),\r\n          width = _getDimensions.width,\r\n          height = _getDimensions.height;\r\n\r\n      if (el.tagName !== 'svg') {\r\n        if (el.getBBox) {\r\n          if (clone.getAttribute('transform') != null) {\r\n            clone.setAttribute('transform', clone.getAttribute('transform').replace(/translate\\(.*?\\)/, ''));\r\n          }\r\n          var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n          svg.appendChild(clone);\r\n          clone = svg;\r\n        } else {\r\n          console.error('Attempted to render non-SVG element', el);\r\n          return;\r\n        }\r\n      }\r\n\r\n      clone.setAttribute('version', '1.1');\r\n      clone.setAttribute('viewBox', [left, top, width, height].join(' '));\r\n      if (!clone.getAttribute('xmlns')) clone.setAttributeNS(xmlNs, 'xmlns', svgNs);\r\n      if (!clone.getAttribute('xmlns:xlink')) clone.setAttributeNS(xmlNs, 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\r\n\r\n      if (responsive) {\r\n        clone.removeAttribute('width');\r\n        clone.removeAttribute('height');\r\n        clone.setAttribute('preserveAspectRatio', 'xMinYMin meet');\r\n      } else {\r\n        clone.setAttribute('width', width * scale);\r\n        clone.setAttribute('height', height * scale);\r\n      }\r\n\r\n      Array.from(clone.querySelectorAll('foreignObject > *')).forEach(function (foreignObject) {\r\n        foreignObject.setAttributeNS(xmlNs, 'xmlns', foreignObject.tagName === 'svg' ? svgNs : xhtmlNs);\r\n      });\r\n\r\n      if (excludeCss) {\r\n        var outer = document.createElement('div');\r\n        outer.appendChild(clone);\r\n        var src = outer.innerHTML;\r\n        if (typeof done === 'function') done(src, width, height);else return { src: src, width: width, height: height };\r\n      } else {\r\n        return inlineCss(el, options).then(function (css) {\r\n          var style = document.createElement('style');\r\n          style.setAttribute('type', 'text/css');\r\n          style.innerHTML = '<![CDATA[\\n' + css + '\\n]]>';\r\n\r\n          var defs = document.createElement('defs');\r\n          defs.appendChild(style);\r\n          clone.insertBefore(defs, clone.firstChild);\r\n\r\n          var outer = document.createElement('div');\r\n          outer.appendChild(clone);\r\n          var src = outer.innerHTML.replace(/NS\\d+:href/gi, 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href');\r\n\r\n          if (typeof done === 'function') done(src, width, height);else return { src: src, width: width, height: height };\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  out$.svgAsDataUri = function (el, options, done) {\r\n    requireDomNode(el);\r\n    return out$.prepareSvg(el, options).then(function (_ref4) {\r\n      var src = _ref4.src,\r\n          width = _ref4.width,\r\n          height = _ref4.height;\r\n\r\n      var svgXml = 'data:image/svg+xml;base64,' + window.btoa(reEncode(doctype + src));\r\n      if (typeof done === 'function') {\r\n        done(svgXml, width, height);\r\n      }\r\n      return svgXml;\r\n    });\r\n  };\r\n\r\n  out$.svgAsPngUri = function (el, options, done) {\r\n    requireDomNode(el);\r\n\r\n    var _ref5 = options || {},\r\n        _ref5$encoderType = _ref5.encoderType,\r\n        encoderType = _ref5$encoderType === undefined ? 'image/png' : _ref5$encoderType,\r\n        _ref5$encoderOptions = _ref5.encoderOptions,\r\n        encoderOptions = _ref5$encoderOptions === undefined ? 0.8 : _ref5$encoderOptions,\r\n        canvg = _ref5.canvg;\r\n\r\n    var convertToPng = function convertToPng(_ref6) {\r\n      var src = _ref6.src,\r\n          width = _ref6.width,\r\n          height = _ref6.height;\r\n\r\n      var canvas = document.createElement('canvas');\r\n      var context = canvas.getContext('2d');\r\n      var pixelRatio = window.devicePixelRatio || 1;\r\n\r\n      canvas.width = width * pixelRatio;\r\n      canvas.height = height * pixelRatio;\r\n      canvas.style.width = canvas.width + 'px';\r\n      canvas.style.height = canvas.height + 'px';\r\n      context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n\r\n      if (canvg) canvg(canvas, src);else context.drawImage(src, 0, 0);\r\n\r\n      var png = void 0;\r\n      try {\r\n        png = canvas.toDataURL(encoderType, encoderOptions);\r\n      } catch (e) {\r\n        if (typeof SecurityError !== 'undefined' && e instanceof SecurityError || e.name === 'SecurityError') {\r\n          console.error('Rendered SVG images cannot be downloaded in this browser.');\r\n          return;\r\n        } else throw e;\r\n      }\r\n      if (typeof done === 'function') done(png, canvas.width, canvas.height);\r\n      return Promise.resolve(png);\r\n    };\r\n\r\n    if (canvg) return out$.prepareSvg(el, options).then(convertToPng);else return out$.svgAsDataUri(el, options).then(function (uri) {\r\n      return new Promise(function (resolve, reject) {\r\n        var image = new Image();\r\n        image.onload = function () {\r\n          return resolve(convertToPng({\r\n            src: image,\r\n            width: image.width,\r\n            height: image.height\r\n          }));\r\n        };\r\n        image.onerror = function () {\r\n          reject('There was an error loading the data URI as an image on the following SVG\\n' + window.atob(uri.slice(26)) + 'Open the following link to see browser\\'s diagnosis\\n' + uri);\r\n        };\r\n        image.src = uri;\r\n      });\r\n    });\r\n  };\r\n\r\n  out$.download = function (name, uri, options) {\r\n    if (navigator.msSaveOrOpenBlob) navigator.msSaveOrOpenBlob(uriToBlob(uri), name);else {\r\n      var saveLink = document.createElement('a');\r\n      if ('download' in saveLink) {\r\n        saveLink.download = name;\r\n        saveLink.style.display = 'none';\r\n        document.body.appendChild(saveLink);\r\n        try {\r\n          var blob = uriToBlob(uri);\r\n          var url = URL.createObjectURL(blob);\r\n          saveLink.href = url;\r\n          saveLink.onclick = function () {\r\n            return requestAnimationFrame(function () {\r\n              return URL.revokeObjectURL(url);\r\n            });\r\n          };\r\n        } catch (e) {\r\n          console.error(e);\r\n          console.warn('Error while getting object URL. Falling back to string URL.');\r\n          saveLink.href = uri;\r\n        }\r\n        saveLink.click();\r\n        document.body.removeChild(saveLink);\r\n      } else if (options && options.popup) {\r\n        options.popup.document.title = name;\r\n        options.popup.location.replace(uri);\r\n      }\r\n    }\r\n  };\r\n\r\n  out$.saveSvg = function (el, name, options) {\r\n    var downloadOpts = downloadOptions(); // don't inline, can't be async\r\n    return requireDomNodePromise(el).then(function (el) {\r\n      return out$.svgAsDataUri(el, options || {});\r\n    }).then(function (uri) {\r\n      return out$.download(name, uri, downloadOpts);\r\n    });\r\n  };\r\n\r\n  out$.saveSvgAsPng = function (el, name, options) {\r\n    var downloadOpts = downloadOptions(); // don't inline, can't be async\r\n    return requireDomNodePromise(el).then(function (el) {\r\n      return out$.svgAsPngUri(el, options || {});\r\n    }).then(function (uri) {\r\n      return out$.download(name, uri, downloadOpts);\r\n    });\r\n  };\r\n})();", "/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n", "import type { Options } from './types'\r\n\r\nexport function resolveUrl(url: string, baseUrl: string | null): string {\r\n  // url is absolute already\r\n  if (url.match(/^[a-z]+:\\/\\//i)) {\r\n    return url\r\n  }\r\n\r\n  // url is absolute already, without protocol\r\n  if (url.match(/^\\/\\//)) {\r\n    return window.location.protocol + url\r\n  }\r\n\r\n  // dataURI, mailto:, tel:, etc.\r\n  if (url.match(/^[a-z]+:/i)) {\r\n    return url\r\n  }\r\n\r\n  const doc = document.implementation.createHTMLDocument()\r\n  const base = doc.createElement('base')\r\n  const a = doc.createElement('a')\r\n\r\n  doc.head.appendChild(base)\r\n  doc.body.appendChild(a)\r\n\r\n  if (baseUrl) {\r\n    base.href = baseUrl\r\n  }\r\n\r\n  a.href = url\r\n\r\n  return a.href\r\n}\r\n\r\nexport const uuid = (() => {\r\n  // generate uuid for className of pseudo elements.\r\n  // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\r\n  let counter = 0\r\n\r\n  // ref: http://stackoverflow.com/a/6248722/2519373\r\n  const random = () =>\r\n    // eslint-disable-next-line no-bitwise\r\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4)\r\n\r\n  return () => {\r\n    counter += 1\r\n    return `u${random()}${counter}`\r\n  }\r\n})()\r\n\r\nexport function delay<T>(ms: number) {\r\n  return (args: T) =>\r\n    new Promise<T>((resolve) => {\r\n      setTimeout(() => resolve(args), ms)\r\n    })\r\n}\r\n\r\nexport function toArray<T>(arrayLike: any): T[] {\r\n  const arr: T[] = []\r\n\r\n  for (let i = 0, l = arrayLike.length; i < l; i++) {\r\n    arr.push(arrayLike[i])\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction px(node: HTMLElement, styleProperty: string) {\r\n  const win = node.ownerDocument.defaultView || window\r\n  const val = win.getComputedStyle(node).getPropertyValue(styleProperty)\r\n  return val ? parseFloat(val.replace('px', '')) : 0\r\n}\r\n\r\nfunction getNodeWidth(node: HTMLElement) {\r\n  const leftBorder = px(node, 'border-left-width')\r\n  const rightBorder = px(node, 'border-right-width')\r\n  return node.clientWidth + leftBorder + rightBorder\r\n}\r\n\r\nfunction getNodeHeight(node: HTMLElement) {\r\n  const topBorder = px(node, 'border-top-width')\r\n  const bottomBorder = px(node, 'border-bottom-width')\r\n  return node.clientHeight + topBorder + bottomBorder\r\n}\r\n\r\nexport function getImageSize(targetNode: HTMLElement, options: Options = {}) {\r\n  const width = options.width || getNodeWidth(targetNode)\r\n  const height = options.height || getNodeHeight(targetNode)\r\n\r\n  return { width, height }\r\n}\r\n\r\nexport function getPixelRatio() {\r\n  let ratio\r\n\r\n  let FINAL_PROCESS\r\n  try {\r\n    FINAL_PROCESS = process\r\n  } catch (e) {\r\n    // pass\r\n  }\r\n\r\n  const val =\r\n    FINAL_PROCESS && FINAL_PROCESS.env\r\n      ? FINAL_PROCESS.env.devicePixelRatio\r\n      : null\r\n  if (val) {\r\n    ratio = parseInt(val, 10)\r\n    if (Number.isNaN(ratio)) {\r\n      ratio = 1\r\n    }\r\n  }\r\n  return ratio || window.devicePixelRatio || 1\r\n}\r\n\r\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\r\nconst canvasDimensionLimit = 16384\r\n\r\nexport function checkCanvasDimensions(canvas: HTMLCanvasElement) {\r\n  if (\r\n    canvas.width > canvasDimensionLimit ||\r\n    canvas.height > canvasDimensionLimit\r\n  ) {\r\n    if (\r\n      canvas.width > canvasDimensionLimit &&\r\n      canvas.height > canvasDimensionLimit\r\n    ) {\r\n      if (canvas.width > canvas.height) {\r\n        canvas.height *= canvasDimensionLimit / canvas.width\r\n        canvas.width = canvasDimensionLimit\r\n      } else {\r\n        canvas.width *= canvasDimensionLimit / canvas.height\r\n        canvas.height = canvasDimensionLimit\r\n      }\r\n    } else if (canvas.width > canvasDimensionLimit) {\r\n      canvas.height *= canvasDimensionLimit / canvas.width\r\n      canvas.width = canvasDimensionLimit\r\n    } else {\r\n      canvas.width *= canvasDimensionLimit / canvas.height\r\n      canvas.height = canvasDimensionLimit\r\n    }\r\n  }\r\n}\r\n\r\nexport function canvasToBlob(\r\n  canvas: HTMLCanvasElement,\r\n  options: Options = {},\r\n): Promise<Blob | null> {\r\n  if (canvas.toBlob) {\r\n    return new Promise((resolve) => {\r\n      canvas.toBlob(\r\n        resolve,\r\n        options.type ? options.type : 'image/png',\r\n        options.quality ? options.quality : 1,\r\n      )\r\n    })\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    const binaryString = window.atob(\r\n      canvas\r\n        .toDataURL(\r\n          options.type ? options.type : undefined,\r\n          options.quality ? options.quality : undefined,\r\n        )\r\n        .split(',')[1],\r\n    )\r\n    const len = binaryString.length\r\n    const binaryArray = new Uint8Array(len)\r\n\r\n    for (let i = 0; i < len; i += 1) {\r\n      binaryArray[i] = binaryString.charCodeAt(i)\r\n    }\r\n\r\n    resolve(\r\n      new Blob([binaryArray], {\r\n        type: options.type ? options.type : 'image/png',\r\n      }),\r\n    )\r\n  })\r\n}\r\n\r\nexport function createImage(url: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image()\r\n    img.decode = () => resolve(img) as any\r\n    img.onload = () => resolve(img)\r\n    img.onerror = reject\r\n    img.crossOrigin = 'anonymous'\r\n    img.decoding = 'async'\r\n    img.src = url\r\n  })\r\n}\r\n\r\nexport async function svgToDataURL(svg: SVGElement): Promise<string> {\r\n  return Promise.resolve()\r\n    .then(() => new XMLSerializer().serializeToString(svg))\r\n    .then(encodeURIComponent)\r\n    .then((html) => `data:image/svg+xml;charset=utf-8,${html}`)\r\n}\r\n\r\nexport async function nodeToDataURL(\r\n  node: HTMLElement,\r\n  width: number,\r\n  height: number,\r\n): Promise<string> {\r\n  const xmlns = 'http://www.w3.org/2000/svg'\r\n  const svg = document.createElementNS(xmlns, 'svg')\r\n  const foreignObject = document.createElementNS(xmlns, 'foreignObject')\r\n\r\n  svg.setAttribute('width', `${width}`)\r\n  svg.setAttribute('height', `${height}`)\r\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\r\n\r\n  foreignObject.setAttribute('width', '100%')\r\n  foreignObject.setAttribute('height', '100%')\r\n  foreignObject.setAttribute('x', '0')\r\n  foreignObject.setAttribute('y', '0')\r\n  foreignObject.setAttribute('externalResourcesRequired', 'true')\r\n\r\n  svg.appendChild(foreignObject)\r\n  foreignObject.appendChild(node)\r\n  return svgToDataURL(svg)\r\n}\r\n\r\nexport const isInstanceOfElement = <\r\n  T extends typeof Element | typeof HTMLElement | typeof SVGImageElement,\r\n>(\r\n  node: Element | HTMLElement | SVGImageElement,\r\n  instance: T,\r\n): node is T['prototype'] => {\r\n  if (node instanceof instance) return true\r\n\r\n  const nodePrototype = Object.getPrototypeOf(node)\r\n\r\n  if (nodePrototype === null) return false\r\n\r\n  return (\r\n    nodePrototype.constructor.name === instance.name ||\r\n    isInstanceOfElement(nodePrototype, instance)\r\n  )\r\n}\r\n", "import { uuid, toArray } from './util'\r\n\r\ntype Pseudo = ':before' | ':after'\r\n\r\nfunction formatCSSText(style: CSSStyleDeclaration) {\r\n  const content = style.getPropertyValue('content')\r\n  return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`\r\n}\r\n\r\nfunction formatCSSProperties(style: CSSStyleDeclaration) {\r\n  return toArray<string>(style)\r\n    .map((name) => {\r\n      const value = style.getPropertyValue(name)\r\n      const priority = style.getPropertyPriority(name)\r\n\r\n      return `${name}: ${value}${priority ? ' !important' : ''};`\r\n    })\r\n    .join(' ')\r\n}\r\n\r\nfunction getPseudoElementStyle(\r\n  className: string,\r\n  pseudo: Pseudo,\r\n  style: CSSStyleDeclaration,\r\n): Text {\r\n  const selector = `.${className}:${pseudo}`\r\n  const cssText = style.cssText\r\n    ? formatCSSText(style)\r\n    : formatCSSProperties(style)\r\n\r\n  return document.createTextNode(`${selector}{${cssText}}`)\r\n}\r\n\r\nfunction clonePseudoElement<T extends HTMLElement>(\r\n  nativeNode: T,\r\n  clonedNode: T,\r\n  pseudo: Pseudo,\r\n) {\r\n  const style = window.getComputedStyle(nativeNode, pseudo)\r\n  const content = style.getPropertyValue('content')\r\n  if (content === '' || content === 'none') {\r\n    return\r\n  }\r\n\r\n  const className = uuid()\r\n  try {\r\n    clonedNode.className = `${clonedNode.className} ${className}`\r\n  } catch (err) {\r\n    return\r\n  }\r\n\r\n  const styleElement = document.createElement('style')\r\n  styleElement.appendChild(getPseudoElementStyle(className, pseudo, style))\r\n  clonedNode.appendChild(styleElement)\r\n}\r\n\r\nexport function clonePseudoElements<T extends HTMLElement>(\r\n  nativeNode: T,\r\n  clonedNode: T,\r\n) {\r\n  clonePseudoElement(nativeNode, clonedNode, ':before')\r\n  clonePseudoElement(nativeNode, clonedNode, ':after')\r\n}\r\n", "const WOFF = 'application/font-woff'\r\nconst JPEG = 'image/jpeg'\r\nconst mimes: { [key: string]: string } = {\r\n  woff: WOFF,\r\n  woff2: WOFF,\r\n  ttf: 'application/font-truetype',\r\n  eot: 'application/vnd.ms-fontobject',\r\n  png: 'image/png',\r\n  jpg: JPEG,\r\n  jpeg: JPEG,\r\n  gif: 'image/gif',\r\n  tiff: 'image/tiff',\r\n  svg: 'image/svg+xml',\r\n  webp: 'image/webp',\r\n}\r\n\r\nfunction getExtension(url: string): string {\r\n  const match = /\\.([^./]*?)$/g.exec(url)\r\n  return match ? match[1] : ''\r\n}\r\n\r\nexport function getMimeType(url: string): string {\r\n  const extension = getExtension(url).toLowerCase()\r\n  return mimes[extension] || ''\r\n}\r\n", "import { Options } from './types'\r\n\r\nfunction getContentFromDataUrl(dataURL: string) {\r\n  return dataURL.split(/,/)[1]\r\n}\r\n\r\nexport function isDataUrl(url: string) {\r\n  return url.search(/^(data:)/) !== -1\r\n}\r\n\r\nexport function makeDataUrl(content: string, mimeType: string) {\r\n  return `data:${mimeType};base64,${content}`\r\n}\r\n\r\nexport async function fetchAsDataURL<T>(\r\n  url: string,\r\n  init: RequestInit | undefined,\r\n  process: (data: { result: string; res: Response }) => T,\r\n): Promise<T> {\r\n  const res = await fetch(url, init)\r\n  if (res.status === 404) {\r\n    throw new Error(`Resource \"${res.url}\" not found`)\r\n  }\r\n  const blob = await res.blob()\r\n  return new Promise<T>((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.onerror = reject\r\n    reader.onloadend = () => {\r\n      try {\r\n        resolve(process({ res, result: reader.result as string }))\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n\r\n    reader.readAsDataURL(blob)\r\n  })\r\n}\r\n\r\nconst cache: { [url: string]: string } = {}\r\n\r\nfunction getCacheKey(\r\n  url: string,\r\n  contentType: string | undefined,\r\n  includeQueryParams: boolean | undefined,\r\n) {\r\n  let key = url.replace(/\\?.*/, '')\r\n\r\n  if (includeQueryParams) {\r\n    key = url\r\n  }\r\n\r\n  // font resource\r\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\r\n    key = key.replace(/.*\\//, '')\r\n  }\r\n\r\n  return contentType ? `[${contentType}]${key}` : key\r\n}\r\n\r\nexport async function resourceToDataURL(\r\n  resourceUrl: string,\r\n  contentType: string | undefined,\r\n  options: Options,\r\n) {\r\n  const cacheKey = getCacheKey(\r\n    resourceUrl,\r\n    contentType,\r\n    options.includeQueryParams,\r\n  )\r\n\r\n  if (cache[cacheKey] != null) {\r\n    return cache[cacheKey]\r\n  }\r\n\r\n  // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\r\n  if (options.cacheBust) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime()\r\n  }\r\n\r\n  let dataURL: string\r\n  try {\r\n    const content = await fetchAsDataURL(\r\n      resourceUrl,\r\n      options.fetchRequestInit,\r\n      ({ res, result }) => {\r\n        if (!contentType) {\r\n          // eslint-disable-next-line no-param-reassign\r\n          contentType = res.headers.get('Content-Type') || ''\r\n        }\r\n        return getContentFromDataUrl(result)\r\n      },\r\n    )\r\n    dataURL = makeDataUrl(content, contentType!)\r\n  } catch (error) {\r\n    dataURL = options.imagePlaceholder || ''\r\n\r\n    let msg = `Failed to fetch resource: ${resourceUrl}`\r\n    if (error) {\r\n      msg = typeof error === 'string' ? error : error.message\r\n    }\r\n\r\n    if (msg) {\r\n      console.warn(msg)\r\n    }\r\n  }\r\n\r\n  cache[cacheKey] = dataURL\r\n  return dataURL\r\n}\r\n", "import type { Options } from './types'\r\nimport { clonePseudoElements } from './clone-pseudos'\r\nimport { createImage, toArray, isInstanceOfElement } from './util'\r\nimport { getMimeType } from './mimes'\r\nimport { resourceToDataURL } from './dataurl'\r\n\r\nasync function cloneCanvasElement(canvas: HTMLCanvasElement) {\r\n  const dataURL = canvas.toDataURL()\r\n  if (dataURL === 'data:,') {\r\n    return canvas.cloneNode(false) as HTMLCanvasElement\r\n  }\r\n  return createImage(dataURL)\r\n}\r\n\r\nasync function cloneVideoElement(video: HTMLVideoElement, options: Options) {\r\n  if (video.currentSrc) {\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')\r\n    canvas.width = video.clientWidth\r\n    canvas.height = video.clientHeight\r\n    ctx?.drawImage(video, 0, 0, canvas.width, canvas.height)\r\n    const dataURL = canvas.toDataURL()\r\n    return createImage(dataURL)\r\n  }\r\n\r\n  const poster = video.poster\r\n  const contentType = getMimeType(poster)\r\n  const dataURL = await resourceToDataURL(poster, contentType, options)\r\n  return createImage(dataURL)\r\n}\r\n\r\nasync function cloneIFrameElement(iframe: HTMLIFrameElement) {\r\n  try {\r\n    if (iframe?.contentDocument?.body) {\r\n      return (await cloneNode(\r\n        iframe.contentDocument.body,\r\n        {},\r\n        true,\r\n      )) as HTMLBodyElement\r\n    }\r\n  } catch {\r\n    // Failed to clone iframe\r\n  }\r\n\r\n  return iframe.cloneNode(false) as HTMLIFrameElement\r\n}\r\n\r\nasync function cloneSingleNode<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options,\r\n): Promise<HTMLElement> {\r\n  if (isInstanceOfElement(node, HTMLCanvasElement)) {\r\n    return cloneCanvasElement(node)\r\n  }\r\n\r\n  if (isInstanceOfElement(node, HTMLVideoElement)) {\r\n    return cloneVideoElement(node, options)\r\n  }\r\n\r\n  if (isInstanceOfElement(node, HTMLIFrameElement)) {\r\n    return cloneIFrameElement(node)\r\n  }\r\n\r\n  return node.cloneNode(false) as T\r\n}\r\n\r\nconst isSlotElement = (node: HTMLElement): node is HTMLSlotElement =>\r\n  node.tagName != null && node.tagName.toUpperCase() === 'SLOT'\r\n\r\nasync function cloneChildren<T extends HTMLElement>(\r\n  nativeNode: T,\r\n  clonedNode: T,\r\n  options: Options,\r\n): Promise<T> {\r\n  let children: T[] = []\r\n\r\n  if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\r\n    children = toArray<T>(nativeNode.assignedNodes())\r\n  } else if (\r\n    isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\r\n    nativeNode.contentDocument?.body\r\n  ) {\r\n    children = toArray<T>(nativeNode.contentDocument.body.childNodes)\r\n  } else {\r\n    children = toArray<T>((nativeNode.shadowRoot ?? nativeNode).childNodes)\r\n  }\r\n\r\n  if (\r\n    children.length === 0 ||\r\n    isInstanceOfElement(nativeNode, HTMLVideoElement)\r\n  ) {\r\n    return clonedNode\r\n  }\r\n\r\n  await children.reduce(\r\n    (deferred, child) =>\r\n      deferred\r\n        .then(() => cloneNode(child, options))\r\n        .then((clonedChild: HTMLElement | null) => {\r\n          if (clonedChild) {\r\n            clonedNode.appendChild(clonedChild)\r\n          }\r\n        }),\r\n    Promise.resolve(),\r\n  )\r\n\r\n  return clonedNode\r\n}\r\n\r\nfunction cloneCSSStyle<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\r\n  const targetStyle = clonedNode.style\r\n  if (!targetStyle) {\r\n    return\r\n  }\r\n\r\n  const sourceStyle = window.getComputedStyle(nativeNode)\r\n  if (sourceStyle.cssText) {\r\n    targetStyle.cssText = sourceStyle.cssText\r\n    targetStyle.transformOrigin = sourceStyle.transformOrigin\r\n  } else {\r\n    toArray<string>(sourceStyle).forEach((name) => {\r\n      let value = sourceStyle.getPropertyValue(name)\r\n      if (name === 'font-size' && value.endsWith('px')) {\r\n        const reducedFont =\r\n          Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1\r\n        value = `${reducedFont}px`\r\n      }\r\n\r\n      if (\r\n        isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\r\n        name === 'display' &&\r\n        value === 'inline'\r\n      ) {\r\n        value = 'block'\r\n      }\r\n      \r\n      if (name === 'd' && clonedNode.getAttribute('d')) {\r\n        value = `path(${clonedNode.getAttribute('d')})`\r\n      }\r\n      \r\n      targetStyle.setProperty(\r\n        name,\r\n        value,\r\n        sourceStyle.getPropertyPriority(name),\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nfunction cloneInputValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\r\n  if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\r\n    clonedNode.innerHTML = nativeNode.value\r\n  }\r\n\r\n  if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\r\n    clonedNode.setAttribute('value', nativeNode.value)\r\n  }\r\n}\r\n\r\nfunction cloneSelectValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\r\n  if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\r\n    const clonedSelect = clonedNode as any as HTMLSelectElement\r\n    const selectedOption = Array.from(clonedSelect.children).find(\r\n      (child) => nativeNode.value === child.getAttribute('value'),\r\n    )\r\n\r\n    if (selectedOption) {\r\n      selectedOption.setAttribute('selected', '')\r\n    }\r\n  }\r\n}\r\n\r\nfunction decorate<T extends HTMLElement>(nativeNode: T, clonedNode: T): T {\r\n  if (isInstanceOfElement(clonedNode, Element)) {\r\n    cloneCSSStyle(nativeNode, clonedNode)\r\n    clonePseudoElements(nativeNode, clonedNode)\r\n    cloneInputValue(nativeNode, clonedNode)\r\n    cloneSelectValue(nativeNode, clonedNode)\r\n  }\r\n\r\n  return clonedNode\r\n}\r\n\r\nasync function ensureSVGSymbols<T extends HTMLElement>(\r\n  clone: T,\r\n  options: Options,\r\n) {\r\n  const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : []\r\n  if (uses.length === 0) {\r\n    return clone\r\n  }\r\n\r\n  const processedDefs: { [key: string]: HTMLElement } = {}\r\n  for (let i = 0; i < uses.length; i++) {\r\n    const use = uses[i]\r\n    const id = use.getAttribute('xlink:href')\r\n    if (id) {\r\n      const exist = clone.querySelector(id)\r\n      const definition = document.querySelector(id) as HTMLElement\r\n      if (!exist && definition && !processedDefs[id]) {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        processedDefs[id] = (await cloneNode(definition, options, true))!\r\n      }\r\n    }\r\n  }\r\n\r\n  const nodes = Object.values(processedDefs)\r\n  if (nodes.length) {\r\n    const ns = 'http://www.w3.org/1999/xhtml'\r\n    const svg = document.createElementNS(ns, 'svg')\r\n    svg.setAttribute('xmlns', ns)\r\n    svg.style.position = 'absolute'\r\n    svg.style.width = '0'\r\n    svg.style.height = '0'\r\n    svg.style.overflow = 'hidden'\r\n    svg.style.display = 'none'\r\n\r\n    const defs = document.createElementNS(ns, 'defs')\r\n    svg.appendChild(defs)\r\n\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      defs.appendChild(nodes[i])\r\n    }\r\n\r\n    clone.appendChild(svg)\r\n  }\r\n\r\n  return clone\r\n}\r\n\r\nexport async function cloneNode<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options,\r\n  isRoot?: boolean,\r\n): Promise<T | null> {\r\n  if (!isRoot && options.filter && !options.filter(node)) {\r\n    return null\r\n  }\r\n\r\n  return Promise.resolve(node)\r\n    .then((clonedNode) => cloneSingleNode(clonedNode, options) as Promise<T>)\r\n    .then((clonedNode) => cloneChildren(node, clonedNode, options))\r\n    .then((clonedNode) => decorate(node, clonedNode))\r\n    .then((clonedNode) => ensureSVGSymbols(clonedNode, options))\r\n}\r\n", "import { Options } from './types'\r\nimport { resolveUrl } from './util'\r\nimport { getMimeType } from './mimes'\r\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl'\r\n\r\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g\r\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g\r\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g\r\n\r\nfunction toRegex(url: string): RegExp {\r\n  // eslint-disable-next-line no-useless-escape\r\n  const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\r\n  return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g')\r\n}\r\n\r\nexport function parseURLs(cssText: string): string[] {\r\n  const urls: string[] = []\r\n\r\n  cssText.replace(URL_REGEX, (raw, quotation, url) => {\r\n    urls.push(url)\r\n    return raw\r\n  })\r\n\r\n  return urls.filter((url) => !isDataUrl(url))\r\n}\r\n\r\nexport async function embed(\r\n  cssText: string,\r\n  resourceURL: string,\r\n  baseURL: string | null,\r\n  options: Options,\r\n  getContentFromUrl?: (url: string) => Promise<string>,\r\n): Promise<string> {\r\n  try {\r\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL\r\n    const contentType = getMimeType(resourceURL)\r\n    let dataURL: string\r\n    if (getContentFromUrl) {\r\n      const content = await getContentFromUrl(resolvedURL)\r\n      dataURL = makeDataUrl(content, contentType)\r\n    } else {\r\n      dataURL = await resourceToDataURL(resolvedURL, contentType, options)\r\n    }\r\n    return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`)\r\n  } catch (error) {\r\n    // pass\r\n  }\r\n  return cssText\r\n}\r\n\r\nfunction filterPreferredFontFormat(\r\n  str: string,\r\n  { preferredFontFormat }: Options,\r\n): string {\r\n  return !preferredFontFormat\r\n    ? str\r\n    : str.replace(FONT_SRC_REGEX, (match: string) => {\r\n        // eslint-disable-next-line no-constant-condition\r\n        while (true) {\r\n          const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || []\r\n          if (!format) {\r\n            return ''\r\n          }\r\n\r\n          if (format === preferredFontFormat) {\r\n            return `src: ${src};`\r\n          }\r\n        }\r\n      })\r\n}\r\n\r\nexport function shouldEmbed(url: string): boolean {\r\n  return url.search(URL_REGEX) !== -1\r\n}\r\n\r\nexport async function embedResources(\r\n  cssText: string,\r\n  baseUrl: string | null,\r\n  options: Options,\r\n): Promise<string> {\r\n  if (!shouldEmbed(cssText)) {\r\n    return cssText\r\n  }\r\n\r\n  const filteredCSSText = filterPreferredFontFormat(cssText, options)\r\n  const urls = parseURLs(filteredCSSText)\r\n  return urls.reduce(\r\n    (deferred, url) =>\r\n      deferred.then((css) => embed(css, url, baseUrl, options)),\r\n    Promise.resolve(filteredCSSText),\r\n  )\r\n}\r\n", "import { Options } from './types'\r\nimport { embedResources } from './embed-resources'\r\nimport { toArray, isInstanceOfElement } from './util'\r\nimport { isDataUrl, resourceToDataURL } from './dataurl'\r\nimport { getMimeType } from './mimes'\r\n\r\nasync function embedProp(\r\n  propName: string,\r\n  node: HTMLElement,\r\n  options: Options,\r\n) {\r\n  const propValue = node.style?.getPropertyValue(propName)\r\n  if (propValue) {\r\n    const cssString = await embedResources(propValue, null, options)\r\n    node.style.setProperty(\r\n      propName,\r\n      cssString,\r\n      node.style.getPropertyPriority(propName),\r\n    )\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nasync function embedBackground<T extends HTMLElement>(\r\n  clonedNode: T,\r\n  options: Options,\r\n) {\r\n  if (!(await embedProp('background', clonedNode, options))) {\r\n    await embedProp('background-image', clonedNode, options)\r\n  }\r\n  if (!(await embedProp('mask', clonedNode, options))) {\r\n    await embedProp('mask-image', clonedNode, options)\r\n  }\r\n}\r\n\r\nasync function embedImageNode<T extends HTMLElement | SVGImageElement>(\r\n  clonedNode: T,\r\n  options: Options,\r\n) {\r\n  const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement)\r\n\r\n  if (\r\n    !(isImageElement && !isDataUrl(clonedNode.src)) &&\r\n    !(\r\n      isInstanceOfElement(clonedNode, SVGImageElement) &&\r\n      !isDataUrl(clonedNode.href.baseVal)\r\n    )\r\n  ) {\r\n    return\r\n  }\r\n\r\n  const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal\r\n\r\n  const dataURL = await resourceToDataURL(url, getMimeType(url), options)\r\n  await new Promise((resolve, reject) => {\r\n    clonedNode.onload = resolve\r\n    clonedNode.onerror = reject\r\n\r\n    const image = clonedNode as HTMLImageElement\r\n    if (image.decode) {\r\n      image.decode = resolve as any\r\n    }\r\n\r\n    if (image.loading === 'lazy') {\r\n      image.loading = 'eager'\r\n    }\r\n\r\n    if (isImageElement) {\r\n      clonedNode.srcset = ''\r\n      clonedNode.src = dataURL\r\n    } else {\r\n      clonedNode.href.baseVal = dataURL\r\n    }\r\n  })\r\n}\r\n\r\nasync function embedChildren<T extends HTMLElement>(\r\n  clonedNode: T,\r\n  options: Options,\r\n) {\r\n  const children = toArray<HTMLElement>(clonedNode.childNodes)\r\n  const deferreds = children.map((child) => embedImages(child, options))\r\n  await Promise.all(deferreds).then(() => clonedNode)\r\n}\r\n\r\nexport async function embedImages<T extends HTMLElement>(\r\n  clonedNode: T,\r\n  options: Options,\r\n) {\r\n  if (isInstanceOfElement(clonedNode, Element)) {\r\n    await embedBackground(clonedNode, options)\r\n    await embedImageNode(clonedNode, options)\r\n    await embedChildren(clonedNode, options)\r\n  }\r\n}\r\n", "import { Options } from './types'\r\n\r\nexport function applyStyle<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options,\r\n): T {\r\n  const { style } = node\r\n\r\n  if (options.backgroundColor) {\r\n    style.backgroundColor = options.backgroundColor\r\n  }\r\n\r\n  if (options.width) {\r\n    style.width = `${options.width}px`\r\n  }\r\n\r\n  if (options.height) {\r\n    style.height = `${options.height}px`\r\n  }\r\n\r\n  const manual = options.style\r\n  if (manual != null) {\r\n    Object.keys(manual).forEach((key: any) => {\r\n      style[key] = manual[key] as string\r\n    })\r\n  }\r\n\r\n  return node\r\n}\r\n", "import type { Options } from './types'\r\nimport { toArray } from './util'\r\nimport { fetchAsDataURL } from './dataurl'\r\nimport { shouldEmbed, embedResources } from './embed-resources'\r\n\r\ninterface Metadata {\r\n  url: string\r\n  cssText: string\r\n}\r\n\r\nconst cssFetchCache: { [href: string]: Metadata } = {}\r\n\r\nasync function fetchCSS(url: string) {\r\n  let cache = cssFetchCache[url]\r\n  if (cache != null) {\r\n    return cache\r\n  }\r\n\r\n  const res = await fetch(url)\r\n  const cssText = await res.text()\r\n  cache = { url, cssText }\r\n\r\n  cssFetchCache[url] = cache\r\n\r\n  return cache\r\n}\r\n\r\nasync function embedFonts(data: Metadata, options: Options): Promise<string> {\r\n  let cssText = data.cssText\r\n  const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g\r\n  const fontLocs = cssText.match(/url\\([^)]+\\)/g) || []\r\n  const loadFonts = fontLocs.map(async (loc: string) => {\r\n    let url = loc.replace(regexUrl, '$1')\r\n    if (!url.startsWith('https://')) {\r\n      url = new URL(url, data.url).href\r\n    }\r\n\r\n    return fetchAsDataURL<[string, string]>(\r\n      url,\r\n      options.fetchRequestInit,\r\n      ({ result }) => {\r\n        cssText = cssText.replace(loc, `url(${result})`)\r\n        return [loc, result]\r\n      },\r\n    )\r\n  })\r\n\r\n  return Promise.all(loadFonts).then(() => cssText)\r\n}\r\n\r\nfunction parseCSS(source: string) {\r\n  if (source == null) {\r\n    return []\r\n  }\r\n\r\n  const result: string[] = []\r\n  const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi\r\n  // strip out comments\r\n  let cssText = source.replace(commentsRegex, '')\r\n\r\n  // eslint-disable-next-line prefer-regex-literals\r\n  const keyframesRegex = new RegExp(\r\n    '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})',\r\n    'gi',\r\n  )\r\n\r\n  // eslint-disable-next-line no-constant-condition\r\n  while (true) {\r\n    const matches = keyframesRegex.exec(cssText)\r\n    if (matches === null) {\r\n      break\r\n    }\r\n    result.push(matches[0])\r\n  }\r\n  cssText = cssText.replace(keyframesRegex, '')\r\n\r\n  const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi\r\n  // to match css & media queries together\r\n  const combinedCSSRegex =\r\n    '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\r\n    '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'\r\n  // unified regex\r\n  const unifiedRegex = new RegExp(combinedCSSRegex, 'gi')\r\n\r\n  // eslint-disable-next-line no-constant-condition\r\n  while (true) {\r\n    let matches = importRegex.exec(cssText)\r\n    if (matches === null) {\r\n      matches = unifiedRegex.exec(cssText)\r\n      if (matches === null) {\r\n        break\r\n      } else {\r\n        importRegex.lastIndex = unifiedRegex.lastIndex\r\n      }\r\n    } else {\r\n      unifiedRegex.lastIndex = importRegex.lastIndex\r\n    }\r\n    result.push(matches[0])\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nasync function getCSSRules(\r\n  styleSheets: CSSStyleSheet[],\r\n  options: Options,\r\n): Promise<CSSStyleRule[]> {\r\n  const ret: CSSStyleRule[] = []\r\n  const deferreds: Promise<number | void>[] = []\r\n\r\n  // First loop inlines imports\r\n  styleSheets.forEach((sheet) => {\r\n    if ('cssRules' in sheet) {\r\n      try {\r\n        toArray<CSSRule>(sheet.cssRules || []).forEach((item, index) => {\r\n          if (item.type === CSSRule.IMPORT_RULE) {\r\n            let importIndex = index + 1\r\n            const url = (item as CSSImportRule).href\r\n            const deferred = fetchCSS(url)\r\n              .then((metadata) => embedFonts(metadata, options))\r\n              .then((cssText) =>\r\n                parseCSS(cssText).forEach((rule) => {\r\n                  try {\r\n                    sheet.insertRule(\r\n                      rule,\r\n                      rule.startsWith('@import')\r\n                        ? (importIndex += 1)\r\n                        : sheet.cssRules.length,\r\n                    )\r\n                  } catch (error) {\r\n                    console.error('Error inserting rule from remote css', {\r\n                      rule,\r\n                      error,\r\n                    })\r\n                  }\r\n                }),\r\n              )\r\n              .catch((e) => {\r\n                console.error('Error loading remote css', e.toString())\r\n              })\r\n\r\n            deferreds.push(deferred)\r\n          }\r\n        })\r\n      } catch (e) {\r\n        const inline =\r\n          styleSheets.find((a) => a.href == null) || document.styleSheets[0]\r\n        if (sheet.href != null) {\r\n          deferreds.push(\r\n            fetchCSS(sheet.href)\r\n              .then((metadata) => embedFonts(metadata, options))\r\n              .then((cssText) =>\r\n                parseCSS(cssText).forEach((rule) => {\r\n                  inline.insertRule(rule, sheet.cssRules.length)\r\n                }),\r\n              )\r\n              .catch((err: unknown) => {\r\n                console.error('Error loading remote stylesheet', err)\r\n              }),\r\n          )\r\n        }\r\n        console.error('Error inlining remote css file', e)\r\n      }\r\n    }\r\n  })\r\n\r\n  return Promise.all(deferreds).then(() => {\r\n    // Second loop parses rules\r\n    styleSheets.forEach((sheet) => {\r\n      if ('cssRules' in sheet) {\r\n        try {\r\n          toArray<CSSStyleRule>(sheet.cssRules || []).forEach((item) => {\r\n            ret.push(item)\r\n          })\r\n        } catch (e) {\r\n          console.error(`Error while reading CSS rules from ${sheet.href}`, e)\r\n        }\r\n      }\r\n    })\r\n\r\n    return ret\r\n  })\r\n}\r\n\r\nfunction getWebFontRules(cssRules: CSSStyleRule[]): CSSStyleRule[] {\r\n  return cssRules\r\n    .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\r\n    .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')))\r\n}\r\n\r\nasync function parseWebFontRules<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options,\r\n) {\r\n  if (node.ownerDocument == null) {\r\n    throw new Error('Provided element is not within a Document')\r\n  }\r\n\r\n  const styleSheets = toArray<CSSStyleSheet>(node.ownerDocument.styleSheets)\r\n  const cssRules = await getCSSRules(styleSheets, options)\r\n\r\n  return getWebFontRules(cssRules)\r\n}\r\n\r\nexport async function getWebFontCSS<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options,\r\n): Promise<string> {\r\n  const rules = await parseWebFontRules(node, options)\r\n  const cssTexts = await Promise.all(\r\n    rules.map((rule) => {\r\n      const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null\r\n      return embedResources(rule.cssText, baseUrl, options)\r\n    }),\r\n  )\r\n\r\n  return cssTexts.join('\\n')\r\n}\r\n\r\nexport async function embedWebFonts<T extends HTMLElement>(\r\n  clonedNode: T,\r\n  options: Options,\r\n) {\r\n  const cssText =\r\n    options.fontEmbedCSS != null\r\n      ? options.fontEmbedCSS\r\n      : options.skipFonts\r\n      ? null\r\n      : await getWebFontCSS(clonedNode, options)\r\n\r\n  if (cssText) {\r\n    const styleNode = document.createElement('style')\r\n    const sytleContent = document.createTextNode(cssText)\r\n\r\n    styleNode.appendChild(sytleContent)\r\n\r\n    if (clonedNode.firstChild) {\r\n      clonedNode.insertBefore(styleNode, clonedNode.firstChild)\r\n    } else {\r\n      clonedNode.appendChild(styleNode)\r\n    }\r\n  }\r\n}\r\n", "import { Options } from './types'\r\nimport { cloneNode } from './clone-node'\r\nimport { embedImages } from './embed-images'\r\nimport { applyStyle } from './apply-style'\r\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts'\r\nimport {\r\n  getImageSize,\r\n  getPixelRatio,\r\n  createImage,\r\n  canvasToBlob,\r\n  nodeToDataURL,\r\n  checkCanvasDimensions,\r\n} from './util'\r\n\r\nexport async function toSvg<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options = {},\r\n): Promise<string> {\r\n  const { width, height } = getImageSize(node, options)\r\n  const clonedNode = (await cloneNode(node, options, true)) as HTMLElement\r\n  await embedWebFonts(clonedNode, options)\r\n  await embedImages(clonedNode, options)\r\n  applyStyle(clonedNode, options)\r\n  const datauri = await nodeToDataURL(clonedNode, width, height)\r\n  return datauri\r\n}\r\n\r\nexport async function toCanvas<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options = {},\r\n): Promise<HTMLCanvasElement> {\r\n  const { width, height } = getImageSize(node, options)\r\n  const svg = await toSvg(node, options)\r\n  const img = await createImage(svg)\r\n\r\n  const canvas = document.createElement('canvas')\r\n  const context = canvas.getContext('2d')!\r\n  const ratio = options.pixelRatio || getPixelRatio()\r\n  const canvasWidth = options.canvasWidth || width\r\n  const canvasHeight = options.canvasHeight || height\r\n\r\n  canvas.width = canvasWidth * ratio\r\n  canvas.height = canvasHeight * ratio\r\n\r\n  if (!options.skipAutoScale) {\r\n    checkCanvasDimensions(canvas)\r\n  }\r\n  canvas.style.width = `${canvasWidth}`\r\n  canvas.style.height = `${canvasHeight}`\r\n\r\n  if (options.backgroundColor) {\r\n    context.fillStyle = options.backgroundColor\r\n    context.fillRect(0, 0, canvas.width, canvas.height)\r\n  }\r\n\r\n  context.drawImage(img, 0, 0, canvas.width, canvas.height)\r\n\r\n  return canvas\r\n}\r\n\r\nexport async function toPixelData<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options = {},\r\n): Promise<Uint8ClampedArray> {\r\n  const { width, height } = getImageSize(node, options)\r\n  const canvas = await toCanvas(node, options)\r\n  const ctx = canvas.getContext('2d')!\r\n  return ctx.getImageData(0, 0, width, height).data\r\n}\r\n\r\nexport async function toPng<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options = {},\r\n): Promise<string> {\r\n  const canvas = await toCanvas(node, options)\r\n  return canvas.toDataURL()\r\n}\r\n\r\nexport async function toJpeg<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options = {},\r\n): Promise<string> {\r\n  const canvas = await toCanvas(node, options)\r\n  return canvas.toDataURL('image/jpeg', options.quality || 1)\r\n}\r\n\r\nexport async function toBlob<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options = {},\r\n): Promise<Blob | null> {\r\n  const canvas = await toCanvas(node, options)\r\n  const blob = await canvasToBlob(canvas)\r\n  return blob\r\n}\r\n\r\nexport async function getFontEmbedCSS<T extends HTMLElement>(\r\n  node: T,\r\n  options: Options = {},\r\n): Promise<string> {\r\n  return getWebFontCSS(node, options)\r\n}\r\n", "/* jslint browser */\n/* global window */\n/* global document */\n\nimport { svgAsPngUri } from 'save-svg-as-png';\nimport { saveAs } from 'file-saver';\n\nconst DEFAULT_OPTIONS = {\n  filename: 'Image',\n  forceFixText: false,\n  printDate: true\n};\n\n/**\n * Set computed style in static style of svg element\n * @param {Document} el\n */\nconst fixColorSvg = (element) => {\n  const { color } = window.getComputedStyle(element);\n\n  element.style.color = color;\n};\n\n/**\n * Set computed style in static style of svg element\n * @param {Document} el\n */\nconst fixSizeSvg = (element) => {\n  const styles = window.getComputedStyle(element);\n\n  element.style.width = styles.width;\n  element.style.height = styles.height;\n};\n\n/**\n * Fix all text with the class \"fixed-text\"\n * @param {Document} node\n */\nconst fixText = (node) => {\n  hardFixText(node, ['.fixed-text']);\n};\n\n/**\n *\n * @param {Document} node\n * @param {Array} seek\n */\nconst hardFixText = (\n  node,\n  seek = [\n    'b',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'i',\n    'mark',\n    'p',\n    'small',\n    'strong'\n  ]\n) => {\n  const allTexts = node.querySelectorAll(seek);\n\n  for (const text of allTexts) {\n    text.style.fontFamily = window.getComputedStyle(text).fontFamily;\n    text.style.fontSize = window.getComputedStyle(text).fontSize;\n    text.style.fontWeight = window.getComputedStyle(text).fontWeight;\n    text.style.width = window.getComputedStyle(text).width;\n  }\n};\n\n/**\n *\n * Exported Functions\n *\n */\n\n/**\n *\n * @param {Document} svgs\n */\nconst replaceFontAwesomeIconsWithImages = async (node) => {\n  const svgs = node.querySelectorAll('svg');\n\n  const images = [];\n\n  for (const item of svgs) {\n    const itemAttribute = item.getAttribute('data-icon');\n    const cache = images.find((img) => img.dataIcon === itemAttribute);\n\n    const imgElement = document.createElement('img');\n\n    if (cache) {\n      imgElement.src = cache.uri;\n    } else {\n      /* eslint-disable no-await-in-loop */\n\n      const uri = await svgAsPngUri(item, 'icon.png');\n      imgElement.src = uri;\n      images.push({ dataIcon: itemAttribute, uri });\n\n      /* eslint-enable no-await-in-loop */\n    }\n\n    imgElement.dataset.icon = itemAttribute;\n    imgElement.width = item.clientWidth;\n    imgElement.height = item.clientHeight;\n\n    item.replaceWith(imgElement);\n  }\n};\n\n/**\n *\n * @param {Document} node\n * @param {Boolean} forceFixText\n */\nconst applyFixs = (node, forceFixText = false) => {\n  const svgs = node.querySelectorAll('svg');\n\n  fixText(node);\n\n  if (forceFixText) {\n    hardFixText(node);\n  }\n\n  for (const element of svgs) {\n    fixColorSvg(element);\n    fixSizeSvg(element);\n  }\n};\n\n/**\n * Merge options\n *\n * @param {*} userOptions\n */\nconst getOptions = (userOptions) => {\n  return {\n    ...DEFAULT_OPTIONS,\n    ...userOptions\n  };\n};\n\n/**\n * Get File name\n * @param {*} options\n */\nconst getFileName = (options) => {\n  if (options.printDate) {\n    const date = new Date().toDateString();\n\n    return `${options.filename} (${date})`;\n  }\n\n  return options.filename || 'Image';\n};\n\nconst removeElements = (node) => {\n  const els = node.querySelectorAll(['.remove-when-downloading']);\n\n  for (const element of els) {\n    element.setAttribute(\n      'original_display',\n      window.getComputedStyle(element).display\n    );\n    element.style.display = 'none';\n  }\n};\n\nconst recoveryElements = (node) => {\n  const els = node.querySelectorAll(['.remove-when-downloading']);\n\n  for (const element of els) {\n    element.style.display = element.getAttribute('original_display');\n  }\n};\n\n/**\n *\n * @param {*} node\n */\nexport const filterElements = (node) => {\n  return node.className !== 'hide-when-downloading';\n};\n\n/**\n *\n * @param {*} node\n * @param {*} userOptions\n * @param {*} callback\n * @param {*} extension\n */\nexport const scaffolding = async (\n  node,\n  userOptions,\n  callback,\n  extension = 'png'\n) => {\n  const options = getOptions(userOptions || {});\n  let canvas = null;\n\n  applyFixs(node, options.forceFixText);\n\n  removeElements(node);\n\n  try {\n    canvas = await callback();\n  } catch {\n    /* Litte hack because not working on safari */\n    await replaceFontAwesomeIconsWithImages(node);\n    await callback();\n\n    canvas = await callback();\n  }\n\n  recoveryElements(node);\n\n  saveAs(canvas, `${getFileName(options)}.${extension}`);\n};\n", "/* global window */\n\n/**\n *\n * @param {*} node\n * @param {*} opt\n * @returns\n */\nconst getSizes = (node, opt) => {\n  if (opt.width && opt.height) {\n    const { width, height } = opt;\n\n    return { width, height };\n  }\n\n  const { width, height } = window.getComputedStyle(node);\n\n  return {\n    width: Number.parseInt(width.replace('px', ''), 10) + 4,\n    height: Number.parseInt(height.replace('px', ''), 10) + 4\n  };\n};\n\n/**\n *\n * @param {*} node\n * @param {*} opt\n * @param {*} format\n * @returns\n */\nexport const getImageOptions = (node, opt, format = 'png') => {\n  const { backgroundColor, quality, pixelRatio, style } = opt;\n  let currentOptions = {\n    ...getSizes(node, opt),\n    pixelRatio: 1\n  };\n\n  // Style\n  if (style) {\n    currentOptions = {\n      ...currentOptions,\n      style\n    };\n  }\n\n  // Background\n  if (backgroundColor) {\n    currentOptions = {\n      ...currentOptions,\n      backgroundColor\n    };\n  }\n\n  // Pixel Ratio\n  if (pixelRatio && pixelRatio > 0) {\n    currentOptions = {\n      ...currentOptions,\n      pixelRatio\n    };\n  }\n\n  // Quality\n  if (quality && format.includes('jpeg')) {\n    const q = quality >= 0 && quality <= 1 ? quality : 1;\n\n    currentOptions = {\n      ...currentOptions,\n      quality: q\n    };\n  }\n\n  return currentOptions || {};\n};\n", "/* jslint browser */\n\nimport { toPng, toJpeg } from 'html-to-image';\n\nimport { filterElements, scaffolding } from './utils';\nimport { getImageOptions } from './utils-image-options';\n\n/**\n *  Save html as Jpeg Image\n *\n * @param {*} node\n * @param {*} userOptions\n * @param {*} imageOptions\n */\nexport const saveAsJpeg = async (node, userOptions = {}, imageOptions = {}) => {\n  const callback = () =>\n    toJpeg(node, {\n      filter: filterElements,\n      ...getImageOptions(node, imageOptions, 'jpeg')\n    });\n\n  await scaffolding(node, userOptions, callback, 'jpeg');\n};\n\n/**\n * Save html as png image\n *\n * @param {*} node\n * @param {*} userOptions\n * @param {*} imageOptions\n */\nexport const saveAsPng = async (node, userOptions = {}, imageOptions = {}) => {\n  const callback = () =>\n    toPng(node, {\n      filter: filterElements,\n      ...getImageOptions(node, imageOptions, 'png')\n    });\n\n  await scaffolding(node, userOptions, callback, 'png');\n};\n\n/**\n * @deprecated use saveAsPng\n * Will removed in version 1.6\n * Download the DOM node to png file\n *\n * @param {Document} node\n * @param {String} nameOfPage\n * @param {Boolean} hardFixText\n */\nexport const downloadDOM = async (\n  node,\n  nameOfPage = 'Image',\n  forceFixText = false\n) => {\n  await saveAsPng(node, { forceFixText, filename: nameOfPage });\n};\n"],
  "mappings": "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",
  "names": ["isElement", "requireDomNode", "requireDomNodePromise", "isExternal", "getFontMimeTypeFromUrl", "arrayBufferToBase64", "i", "getDimension", "v", "getDimensions", "y", "reEncode", "c", "uriToBlob", "query", "detectCssFont", "inlineImages", "inlineFonts", "styleSheetRules", "inlineCss", "downloadOptions", "w", "h", "outer", "src", "convertToPng", "el", "b", "a", "c", "d", "g", "f", "h", "i", "e", "l", "m", "a", "i", "l", "process", "dataURL", "i", "cache", "a", "Symbol", "iterator", "_settle", "pact", "state", "value", "s", "_Pact", "o", "bind", "v", "then", "observer", "prototype", "onFulfilled", "onRejected", "result", "this", "callback", "e", "_this", "_isSettledPact", "thenable", "DEFAULT_OPTIONS", "filename", "forceFixText", "printDate", "fixColorSvg", "element", "window", "getComputedStyle", "style", "color", "fixSizeSvg", "styles", "width", "height", "hardFixText", "node", "seek", "n", "r", "querySelectorAll", "text", "fontFamily", "fontSize", "fontWeight", "filterElements", "className", "scaffolding", "userOptions", "extension", "m", "display", "getAttribute", "saveAs", "canvas", "options", "date", "Date", "toDateString", "svgs", "setAttribute", "w", "body", "recover", "images", "target", "check", "_iteratorSymbol", "step", "reject", "_cycle", "next", "done", "_fixup", "TypeError", "values", "i", "length", "push", "array", "item", "imgElement", "dataset", "icon", "itemAttribute", "clientWidth", "clientHeight", "replaceWith", "cache", "find", "img", "dataIcon", "document", "createElement", "a", "svgAsPngUri", "uri", "src", "t", "getImageOptions", "opt", "format", "backgroundColor", "quality", "pixelRatio", "currentOptions", "Number", "parseInt", "replace", "includes", "saveAsJpeg", "imageOptions", "toJpeg", "filter", "saveAsPng", "toPng", "downloadDOM", "nameOfPage"]
}
